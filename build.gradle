plugins {
  id 'java-library'
  //id 'com.diffplug.gradle.spotless' version '3.28.0'
  id 'maven'
  id 'signing'
}

sourceCompatibility = 11
targetCompatibility = 11
group = 'com.authkit'
version = version

/*
spotless {
 java {
    googleJavaFormat()
  }
}
*/

test {
  useJUnitPlatform()
}


repositories {
  mavenCentral()
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

signing {
  sign configurations.archives
}


dependencies {

  api group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
  api group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
  implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
  implementation group: 'io.jsonwebtoken', name: 'jjwt-gson', version: '0.11.2'

  // import a BOM
  implementation platform('io.projectreactor:reactor-bom:2020.0.11')

  // define dependencies without versions
  implementation 'io.projectreactor.netty:reactor-netty-core'
  implementation 'io.projectreactor.netty:reactor-netty-http'

  testCompile group: 'org.mockito', name: 'mockito-core', version: '3.2.4'
  testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.2.4'
  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.6.0'
  testCompile group: 'com.konghq', name: 'unirest-java', version: '3.11.03'
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0'
  testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.15.0'
  testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0'

}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {

        name 'AuthKit Java Client'

        packaging 'jar'

        description 'OpenID and JWT client for Java Applications'
        url 'https://authkit.com'

        scm {
          connection 'scm:git:git://github.com/authkitcom/authkit-java.git'
          developerConnection 'scm:git:git://github.com/authkitcom/authkit-java.git'
          url 'https://github.com/authkitcom/authkit-java'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'btomasini'
            name 'Ben Tomasini'
            email 'btomasini@authkit.com'
          }
        }
      }
    }
  }
}


